"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const gulp_1 = __importDefault(require("gulp"));
const internal_1 = require("../../internal");
class GulpTasks {
    constructor(_context) {
        this._context = _context;
    }
    get cleanTasks() {
        return internal_1.getCleanTasks(this._context);
    }
    get buildTasks() {
        return internal_1.getBuildTasks(this._context);
    }
    get testTasks() {
        return internal_1.getTestTasks(this._context);
    }
    get allTasks() {
        return [...this.cleanTasks.allTasks, ...this.buildTasks.allTasks, ...this.testTasks.allTasks];
    }
}
function getGulpTasks(context) {
    if (GulpTasks.gulpTask === undefined)
        GulpTasks.gulpTask = new GulpTasks(context);
    return GulpTasks.gulpTask;
}
exports.getGulpTasks = getGulpTasks;
function createTask(context, taskName, parallel, createTaskCallback) {
    let task;
    if (context.project.workspaces.length > 0) {
        let workspaceTasks = [];
        context.project.workspaces.forEach(_ => {
            let workspaceTask = createTaskCallback(_);
            workspaceTask.displayName = `${taskName}:${_.workspacePackage.packageObject.name}`;
            workspaceTasks.push(workspaceTask);
        });
        task = parallel ? gulp_1.default.parallel(workspaceTasks) : gulp_1.default.series(workspaceTasks);
        task.displayName = taskName;
    }
    else {
        task = createTaskCallback();
        task.displayName = taskName;
    }
    return task;
}
exports.createTask = createTask;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiR3VscFRhc2tzLmpzIiwic291cmNlUm9vdCI6Ii4vU291cmNlLyIsInNvdXJjZXMiOlsiR3VscC9UYXNrcy9HdWxwVGFza3MudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFLQSxnREFBd0I7QUFFeEIsNkNBQXlGO0FBRXpGLE1BQU0sU0FBUztJQUdYLFlBQW9CLFFBQXFCO1FBQXJCLGFBQVEsR0FBUixRQUFRLENBQWE7SUFBRyxDQUFDO0lBRTdDLElBQUksVUFBVTtRQUNWLE9BQU8sd0JBQWEsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDeEMsQ0FBQztJQUVELElBQUksVUFBVTtRQUNWLE9BQU8sd0JBQWEsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDeEMsQ0FBQztJQUVELElBQUksU0FBUztRQUNULE9BQU8sdUJBQVksQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7SUFDdkMsQ0FBQztJQUVELElBQUksUUFBUTtRQUNSLE9BQU8sQ0FBQyxHQUFHLElBQUksQ0FBQyxVQUFVLENBQUMsUUFBUSxFQUFFLEdBQUcsSUFBSSxDQUFDLFVBQVUsQ0FBQyxRQUFRLEVBQUUsR0FBRyxJQUFJLENBQUMsU0FBUyxDQUFDLFFBQVEsQ0FBQyxDQUFDO0lBQ2xHLENBQUM7Q0FDSjtBQUVELFNBQWdCLFlBQVksQ0FBQyxPQUFvQjtJQUM3QyxJQUFJLFNBQVMsQ0FBQyxRQUFRLEtBQUssU0FBUztRQUFFLFNBQVMsQ0FBQyxRQUFRLEdBQUcsSUFBSSxTQUFTLENBQUMsT0FBTyxDQUFDLENBQUM7SUFDbEYsT0FBTyxTQUFTLENBQUMsUUFBUSxDQUFBO0FBQzdCLENBQUM7QUFIRCxvQ0FHQztBQUVELFNBQWdCLFVBQVUsQ0FBQyxPQUFvQixFQUFFLFFBQWdCLEVBQUUsUUFBaUIsRUFBRSxrQkFBK0Q7SUFDakosSUFBSSxJQUFrQixDQUFBO0lBQ3RCLElBQUksT0FBTyxDQUFDLE9BQU8sQ0FBQyxVQUFVLENBQUMsTUFBTSxHQUFHLENBQUMsRUFBRTtRQUN2QyxJQUFJLGNBQWMsR0FBbUIsRUFBRSxDQUFDO1FBQ3hDLE9BQU8sQ0FBQyxPQUFPLENBQUMsVUFBVSxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUMsRUFBRTtZQUNuQyxJQUFJLGFBQWEsR0FBRyxrQkFBa0IsQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUMxQyxhQUFhLENBQUMsV0FBVyxHQUFHLEdBQUcsUUFBUSxJQUFJLENBQUMsQ0FBQyxnQkFBZ0IsQ0FBQyxhQUFhLENBQUMsSUFBSSxFQUFFLENBQUM7WUFDbkYsY0FBYyxDQUFDLElBQUksQ0FBQyxhQUFhLENBQUMsQ0FBQztRQUN2QyxDQUFDLENBQUMsQ0FBQztRQUNILElBQUksR0FBRyxRQUFRLENBQUEsQ0FBQyxDQUFDLGNBQUksQ0FBQyxRQUFRLENBQUMsY0FBYyxDQUFDLENBQUMsQ0FBQyxDQUFDLGNBQUksQ0FBQyxNQUFNLENBQUMsY0FBYyxDQUFDLENBQUM7UUFDN0UsSUFBSSxDQUFDLFdBQVcsR0FBRyxRQUFRLENBQUE7S0FDOUI7U0FDSTtRQUNELElBQUksR0FBRyxrQkFBa0IsRUFBRSxDQUFDO1FBQzVCLElBQUksQ0FBQyxXQUFXLEdBQUcsUUFBUSxDQUFDO0tBQy9CO0lBRUQsT0FBTyxJQUFJLENBQUM7QUFDaEIsQ0FBQztBQWxCRCxnQ0FrQkMiLCJzb3VyY2VzQ29udGVudCI6WyIvKi0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLVxuICogIENvcHlyaWdodCAoYykgRG9saXR0bGUuIEFsbCByaWdodHMgcmVzZXJ2ZWQuXG4gKiAgTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBMaWNlbnNlLiBTZWUgTElDRU5TRSBpbiB0aGUgcHJvamVjdCByb290IGZvciBsaWNlbnNlIGluZm9ybWF0aW9uLlxuICotLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLS0tLSovXG5pbXBvcnQge1Rhc2tGdW5jdGlvbn0gZnJvbSAndW5kZXJ0YWtlcic7XG5pbXBvcnQgZ3VscCBmcm9tICdndWxwJztcbmltcG9ydCB7IFlhcm5Xb3Jrc3BhY2UgfSBmcm9tICdAZG9saXR0bGUvdHlwZXNjcmlwdC5idWlsZCc7XG5pbXBvcnQgeyBHdWxwQ29udGV4dCwgZ2V0Q2xlYW5UYXNrcywgZ2V0QnVpbGRUYXNrcywgZ2V0VGVzdFRhc2tzIH0gZnJvbSAnLi4vLi4vaW50ZXJuYWwnO1xuXG5jbGFzcyBHdWxwVGFza3Mge1xuICAgIHN0YXRpYyBndWxwVGFzazogR3VscFRhc2tzXG4gICAgXG4gICAgY29uc3RydWN0b3IocHJpdmF0ZSBfY29udGV4dDogR3VscENvbnRleHQpIHt9XG5cbiAgICBnZXQgY2xlYW5UYXNrcygpIHtcbiAgICAgICAgcmV0dXJuIGdldENsZWFuVGFza3ModGhpcy5fY29udGV4dCk7XG4gICAgfVxuXG4gICAgZ2V0IGJ1aWxkVGFza3MoKSB7XG4gICAgICAgIHJldHVybiBnZXRCdWlsZFRhc2tzKHRoaXMuX2NvbnRleHQpO1xuICAgIH1cblxuICAgIGdldCB0ZXN0VGFza3MoKSB7XG4gICAgICAgIHJldHVybiBnZXRUZXN0VGFza3ModGhpcy5fY29udGV4dCk7XG4gICAgfVxuXG4gICAgZ2V0IGFsbFRhc2tzKCkge1xuICAgICAgICByZXR1cm4gWy4uLnRoaXMuY2xlYW5UYXNrcy5hbGxUYXNrcywgLi4udGhpcy5idWlsZFRhc2tzLmFsbFRhc2tzLCAuLi50aGlzLnRlc3RUYXNrcy5hbGxUYXNrc107XG4gICAgfVxufVxuXG5leHBvcnQgZnVuY3Rpb24gZ2V0R3VscFRhc2tzKGNvbnRleHQ6IEd1bHBDb250ZXh0KSB7XG4gICAgaWYgKEd1bHBUYXNrcy5ndWxwVGFzayA9PT0gdW5kZWZpbmVkKSBHdWxwVGFza3MuZ3VscFRhc2sgPSBuZXcgR3VscFRhc2tzKGNvbnRleHQpO1xuICAgIHJldHVybiBHdWxwVGFza3MuZ3VscFRhc2tcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZVRhc2soY29udGV4dDogR3VscENvbnRleHQsIHRhc2tOYW1lOiBzdHJpbmcsIHBhcmFsbGVsOiBib29sZWFuLCBjcmVhdGVUYXNrQ2FsbGJhY2s6ICh3b3Jrc3BhY2U/OiBZYXJuV29ya3NwYWNlKSA9PiBUYXNrRnVuY3Rpb24pIHtcbiAgICBsZXQgdGFzazogVGFza0Z1bmN0aW9uXG4gICAgaWYgKGNvbnRleHQucHJvamVjdC53b3Jrc3BhY2VzLmxlbmd0aCA+IDApIHtcbiAgICAgICAgbGV0IHdvcmtzcGFjZVRhc2tzOiBUYXNrRnVuY3Rpb25bXSA9IFtdO1xuICAgICAgICBjb250ZXh0LnByb2plY3Qud29ya3NwYWNlcy5mb3JFYWNoKF8gPT4ge1xuICAgICAgICAgICAgbGV0IHdvcmtzcGFjZVRhc2sgPSBjcmVhdGVUYXNrQ2FsbGJhY2soXyk7XG4gICAgICAgICAgICB3b3Jrc3BhY2VUYXNrLmRpc3BsYXlOYW1lID0gYCR7dGFza05hbWV9OiR7Xy53b3Jrc3BhY2VQYWNrYWdlLnBhY2thZ2VPYmplY3QubmFtZX1gO1xuICAgICAgICAgICAgd29ya3NwYWNlVGFza3MucHVzaCh3b3Jrc3BhY2VUYXNrKTtcbiAgICAgICAgfSk7XG4gICAgICAgIHRhc2sgPSBwYXJhbGxlbD8gZ3VscC5wYXJhbGxlbCh3b3Jrc3BhY2VUYXNrcykgOiBndWxwLnNlcmllcyh3b3Jrc3BhY2VUYXNrcyk7XG4gICAgICAgIHRhc2suZGlzcGxheU5hbWUgPSB0YXNrTmFtZVxuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgdGFzayA9IGNyZWF0ZVRhc2tDYWxsYmFjaygpO1xuICAgICAgICB0YXNrLmRpc3BsYXlOYW1lID0gdGFza05hbWU7XG4gICAgfVxuXG4gICAgcmV0dXJuIHRhc2s7XG59Il19